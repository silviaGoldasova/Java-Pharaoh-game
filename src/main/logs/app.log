08:14:34 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:14:34 DEBUG [com.goldasil.pjv.models.RandomPlayer] - valid card: Card obj: rank: EIGHT, suit: ACORNS
08:14:34 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: EIGHT, suit: ACORNS]
08:14:34 DEBUG [com.goldasil.pjv.models.RandomPlayer] - valid card: Card obj: rank: NINE, suit: ACORNS
08:14:34 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: NINE, suit: ACORNS]
08:14:34 DEBUG [com.goldasil.pjv.models.RandomPlayer] - valid card: Card obj: rank: KING, suit: ACORNS
08:14:34 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:14:34 DEBUG [com.goldasil.pjv.models.RandomPlayer] - List of possible moves: [[Card obj: rank: EIGHT, suit: ACORNS], [Card obj: rank: NINE, suit: ACORNS], [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]]
08:20:00 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:20:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: EIGHT, suit: ACORNS]
08:20:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: NINE, suit: ACORNS]
08:20:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:20:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - List of possible moves: [[Card obj: rank: EIGHT, suit: ACORNS], [Card obj: rank: NINE, suit: ACORNS], [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]]
08:20:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Number of possible moves3
08:20:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move2
08:21:30 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:21:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: EIGHT, suit: ACORNS]
08:21:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: NINE, suit: ACORNS]
08:21:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:21:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - List of possible moves: [[Card obj: rank: EIGHT, suit: ACORNS], [Card obj: rank: NINE, suit: ACORNS], [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]]
08:21:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Number of possible moves3
08:21:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:21:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:24:40 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:24:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: EIGHT, suit: ACORNS]
08:24:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: NINE, suit: ACORNS]
08:24:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:24:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - List of possible moves: [[Card obj: rank: EIGHT, suit: ACORNS], [Card obj: rank: NINE, suit: ACORNS], [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]]
08:24:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Number of possible moves3
08:24:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:24:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:24:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Returning : MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:24:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:24:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:27:03 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:27:03 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: EIGHT, suit: ACORNS]
08:27:03 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: NINE, suit: ACORNS]
08:27:03 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:27:03 DEBUG [com.goldasil.pjv.models.RandomPlayer] - List of possible moves: [[Card obj: rank: EIGHT, suit: ACORNS], [Card obj: rank: NINE, suit: ACORNS], [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]]
08:27:03 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Number of possible moves3
08:27:03 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:27:03 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:27:03 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Returning : MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:27:03 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:27:03 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:27:03 DEBUG [RandomPlayerTest] - Test class - generated move: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:28:43 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: EIGHT, suit: ACORNS]
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: NINE, suit: ACORNS]
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - List of possible moves: [[Card obj: rank: EIGHT, suit: ACORNS], [Card obj: rank: NINE, suit: ACORNS], [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]]
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Number of possible moves3
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Returning : MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:28:43 DEBUG [RandomPlayerTest] - Test class - generated move: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:28:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - moves in compare moves: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: HEARTS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:31:01 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: EIGHT, suit: ACORNS]
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: NINE, suit: ACORNS]
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - List of possible moves: [[Card obj: rank: EIGHT, suit: ACORNS], [Card obj: rank: NINE, suit: ACORNS], [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]]
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Number of possible moves3
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Returning : MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:31:01 DEBUG [RandomPlayerTest] - Test class - generated move: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - moves in compare moves: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: HEARTS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:31:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - matches size : 3, moveA.move.size(): 3
08:32:36 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: EIGHT, suit: ACORNS]
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: NINE, suit: ACORNS]
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - List of possible moves: [[Card obj: rank: EIGHT, suit: ACORNS], [Card obj: rank: NINE, suit: ACORNS], [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]]
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Number of possible moves3
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Returning : MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:32:36 DEBUG [RandomPlayerTest] - Test class - generated move: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - moves in compare moves: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: HEARTS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - matches size : 3, moveA.move.size(): 3
08:32:36 DEBUG [RandomPlayerTest] - result: true
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - moves in compare moves: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: HEARTS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:32:36 DEBUG [com.goldasil.pjv.models.RandomPlayer] - matches size : 3, moveA.move.size(): 3
08:32:42 DEBUG [TestMain] - TestMain method has started.
08:32:42 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: EIGHT, suit: ACORNS]
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: NINE, suit: ACORNS]
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - List of possible moves: [[Card obj: rank: EIGHT, suit: ACORNS], [Card obj: rank: NINE, suit: ACORNS], [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]]
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Number of possible moves3
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Returning : MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:32:42 DEBUG [RandomPlayerTest] - Test class - generated move: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - moves in compare moves: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: HEARTS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - matches size : 3, moveA.move.size(): 3
08:32:42 DEBUG [RandomPlayerTest] - result: true
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - moves in compare moves: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: HEARTS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:32:42 DEBUG [com.goldasil.pjv.models.RandomPlayer] - matches size : 3, moveA.move.size(): 3
08:33:21 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: EIGHT, suit: ACORNS]
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: NINE, suit: ACORNS]
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Pos move addded: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - List of possible moves: [[Card obj: rank: EIGHT, suit: ACORNS], [Card obj: rank: NINE, suit: ACORNS], [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]]
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Number of possible moves3
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Returning : MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Index of largest move 2
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Largest move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS]
08:33:21 DEBUG [RandomPlayerTest] - Test class - generated move: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - moves in compare moves: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: HEARTS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - matches size : 3, moveA.move.size(): 3
08:33:21 DEBUG [RandomPlayerTest] - result: true
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - moves in compare moves: MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: HEARTS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: HEARTS], drawCards: 0
08:33:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - matches size : 3, moveA.move.size(): 3
19:40:45 DEBUG [TestMain] - TestMain method has started.
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [LOOKING_FOR_SEVEN_HEARTS_RETURN, ACORNS_PLAYED, NINE_PLAYED] to [BELLS_PLAYED, EIGHT_PLAYED].
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Not the same rank or suit from [LOOKING_FOR_SEVEN_HEARTS_RETURN, ACORNS_PLAYED, NINE_PLAYED] to [BELLS_PLAYED, EIGHT_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Special high priority transition from [LOOKING_FOR_SEVEN_HEARTS_RETURN, OVERKNAVE_LEAVES, LEAVES_PLAYED] to [SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, SEVEN_PLAYED] -> valid transition.

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from [OVERKNAVE_LEAVES, LEAVES_PLAYED] to [SEVENS_PLAYED, ACORNS_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from OVERKNAVE_LEAVES to SEVENS_PLAYED.

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from [OVERKNAVE_BELLS, BELLS_PLAYED] to [SEVENS_PLAYED, HEARTS_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from OVERKNAVE_BELLS to SEVENS_PLAYED.

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [NONSPECIAL_SITUATION, KING_PLAYED, BELLS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Same rank or suit from [NONSPECIAL_SITUATION, KING_PLAYED, BELLS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Valid trasition from [NONSPECIAL_SITUATION, KING_PLAYED, BELLS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from [NONSPECIAL_SITUATION, ACORNS_PLAYED, NINE_PLAYED] to [PASS].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from NONSPECIAL_SITUATION to PASS.

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [OVERKNAVE_ACORNS, OVERKNAVE_PLAYED, ACORNS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Same rank or suit from [OVERKNAVE_ACORNS, OVERKNAVE_PLAYED, ACORNS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Valid trasition from [OVERKNAVE_ACORNS, OVERKNAVE_PLAYED, ACORNS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [NONSPECIAL_SITUATION, NINE_PLAYED, BELLS_PLAYED] to [NONSPECIAL_SITUATION, NINE_PLAYED, LEAVES_PLAYED].
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Same rank or suit from [NONSPECIAL_SITUATION, NINE_PLAYED, BELLS_PLAYED] to [NONSPECIAL_SITUATION, NINE_PLAYED, LEAVES_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Valid trasition from [NONSPECIAL_SITUATION, NINE_PLAYED, BELLS_PLAYED] to [NONSPECIAL_SITUATION, NINE_PLAYED, LEAVES_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [OVERKNAVE_LEAVES, LEAVES_PLAYED, OVERKNAVE_PLAYED] to [ACORNS_PLAYED, NINE_PLAYED].
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Not the same rank or suit from [OVERKNAVE_LEAVES, LEAVES_PLAYED, OVERKNAVE_PLAYED] to [ACORNS_PLAYED, NINE_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [NONSPECIAL_SITUATION, NINE_PLAYED, BELLS_PLAYED] to [NONSPECIAL_SITUATION, TEN_PLAYED, LEAVES_PLAYED].
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Not the same rank or suit from [NONSPECIAL_SITUATION, NINE_PLAYED, BELLS_PLAYED] to [NONSPECIAL_SITUATION, TEN_PLAYED, LEAVES_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [LOOKING_FOR_SEVEN_HEARTS_RETURN, ACORNS_PLAYED, NINE_PLAYED] to [ACORNS_PLAYED, EIGHT_PLAYED].
19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Same rank or suit from [LOOKING_FOR_SEVEN_HEARTS_RETURN, ACORNS_PLAYED, NINE_PLAYED] to [ACORNS_PLAYED, EIGHT_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - Valid trasition from [LOOKING_FOR_SEVEN_HEARTS_RETURN, ACORNS_PLAYED, NINE_PLAYED] to [ACORNS_PLAYED, EIGHT_PLAYED].

19:40:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:29:27 DEBUG [TestMain] - TestMain method has started.
20:29:27 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:29:27 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:33:39 DEBUG [TestMain] - TestMain method has started.
20:33:39 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:33:39 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:34:05 DEBUG [TestMain] - TestMain method has started.
20:34:05 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:34:05 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:34:18 DEBUG [TestMain] - TestMain method has started.
20:34:18 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:34:18 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:34:30 DEBUG [TestMain] - TestMain method has started.
20:34:30 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:34:30 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:34:30 INFO  [RandomPlayerTest] - Here
20:34:47 DEBUG [TestMain] - TestMain method has started.
20:34:48 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:34:48 INFO  [RandomPlayerTest] - Here
20:34:48 INFO  [RandomPlayerTest] - Here
20:34:48 INFO  [RandomPlayerTest] - Here
20:34:48 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:37:14 DEBUG [TestMain] - TestMain method has started.
20:37:15 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:37:15 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:37:15 INFO  [RandomPlayerTest] - Here
20:37:46 DEBUG [TestMain] - TestMain method has started.
20:37:46 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:37:46 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:37:46 DEBUG [RandomPlayerTest] - Here
20:39:45 DEBUG [TestMain] - TestMain method has started.
20:39:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:39:45 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:39:45 DEBUG [RandomPlayerTest] - testing
20:40:17 DEBUG [TestMain] - TestMain method has started.
20:40:17 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:40:17 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:40:17 DEBUG [RandomPlayerTest] - testing
20:40:17 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates - generating
20:41:02 DEBUG [TestMain] - TestMain method has started.
20:41:02 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:41:02 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:41:02 DEBUG [RandomPlayerTest] - testing
20:41:02 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates - generating
20:46:02 DEBUG [TestMain] - TestMain method has started.
20:46:02 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:46:02 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:46:02 DEBUG [RandomPlayerTest] - testing
20:46:02 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates - generating
20:46:02 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates: [NONSPECIAL_SITUATION, OVERKNAVE_ACORNS, TEN_PLAYED]
20:46:02 DEBUG [RandomPlayerTest] - testing
20:46:02 DEBUG [RandomPlayerTest] - Correct move should be MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0 not MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0.
20:48:22 DEBUG [TestMain] - TestMain method has started.
20:48:22 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:48:22 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
20:48:22 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, OVERKNAVE_ACORNS, TEN_PLAYED]
20:48:22 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: null, drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: null, drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: null, drawCards: 1]
20:48:22 DEBUG [RandomPlayerTest] - Correct move should be MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0 not MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0.
22:14:25 DEBUG [TestMain] - TestMain method has started.
22:14:25 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:14:25 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:14:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
22:14:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: null, drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: null, drawCards: 1]
22:14:25 DEBUG [RandomPlayerTest] - Correct move should be MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0 not MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0.
22:20:40 DEBUG [TestMain] - TestMain method has started.
22:20:40 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:20:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
22:20:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: null, drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: null, drawCards: 1]
22:20:40 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:20:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACORNS_PLAYED, SEVEN_PLAYED]
22:20:40 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: []
22:20:40 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:22:10 DEBUG [TestMain] - TestMain method has started.
22:22:10 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:22:10 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:22:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
22:22:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
22:22:10 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:22:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACORNS_PLAYED, SEVEN_PLAYED]
22:22:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: []
22:24:38 DEBUG [TestMain] - TestMain method has started.
22:24:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:24:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
22:24:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
22:24:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:24:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACORNS_PLAYED, SEVEN_PLAYED]
22:24:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: []
22:24:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:27:22 DEBUG [TestMain] - TestMain method has started.
22:27:23 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:27:23 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:27:23 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
22:27:23 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
22:27:23 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
22:27:23 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=null, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
22:27:23 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACORNS_PLAYED, SEVEN_PLAYED]
22:27:23 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: []
00:20:46 DEBUG [TestMain] - TestMain method has started.
00:20:46 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:20:46 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:20:46 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
00:20:46 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
00:20:46 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:20:46 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=null, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
00:20:46 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACORNS_PLAYED, SEVEN_PLAYED]
00:20:46 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: []
00:21:38 DEBUG [TestMain] - TestMain method has started.
00:21:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:21:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:21:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
00:21:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:21:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
00:21:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:21:38 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=null, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
00:21:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACORNS_PLAYED, SEVEN_PLAYED]
00:21:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:21:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: []
00:23:43 DEBUG [TestMain] - TestMain method has started.
00:23:43 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:23:43 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:23:43 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=null, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
00:23:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACORNS_PLAYED, SEVEN_PLAYED]
00:23:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:23:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: []
00:23:43 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:23:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
00:23:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:23:43 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
00:25:38 DEBUG [TestMain] - TestMain method has started.
00:25:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:25:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:25:38 DEBUG [RandomPlayerTest] - Last test:
00:25:38 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=null, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
00:25:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACORNS_PLAYED, SEVEN_PLAYED]
00:25:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:25:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: []
00:25:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:25:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
00:25:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:25:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
00:30:55 DEBUG [TestMain] - TestMain method has started.
00:30:55 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:30:55 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:30:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
00:30:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:30:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
00:30:55 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:30:55 DEBUG [RandomPlayerTest] - Last test:
00:30:55 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=null, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
00:30:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACORNS_PLAYED, SEVEN_PLAYED]
00:30:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:30:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: []
00:32:00 DEBUG [TestMain] - TestMain method has started.
00:32:01 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:32:01 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:32:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
00:32:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:32:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
00:32:01 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:32:01 DEBUG [RandomPlayerTest] - Last test:
00:32:01 DEBUG [RandomPlayerTest] - MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: ACORNS], drawCards: 0
00:32:01 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=null, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
00:32:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACORNS_PLAYED, SEVEN_PLAYED]
00:32:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:32:01 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: []
00:33:38 DEBUG [TestMain] - TestMain method has started.
00:33:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:33:38 DEBUG [RandomPlayerTest] - Last test:
00:33:38 DEBUG [RandomPlayerTest] - MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: ACORNS], drawCards: 0
00:33:38 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
00:33:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
00:33:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Checking sevens
00:33:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - PenaltyForSevens
00:33:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypeDRAW, move: [], drawCards: 6, MoveTypePASS, move: [], drawCards: 0]
00:33:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:33:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
00:33:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:33:38 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
00:33:38 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:34:08 DEBUG [TestMain] - TestMain method has started.
00:34:08 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:34:08 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:34:08 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
00:34:08 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:34:08 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
00:34:08 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:34:08 DEBUG [RandomPlayerTest] - Last test:
00:34:08 DEBUG [RandomPlayerTest] - MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: ACORNS], drawCards: 0
00:34:08 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
00:34:08 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
00:34:08 DEBUG [com.goldasil.pjv.models.RandomPlayer] - Checking sevens
00:34:08 DEBUG [com.goldasil.pjv.models.RandomPlayer] - PenaltyForSevens
00:34:08 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypeDRAW, move: [], drawCards: 6, MoveTypePASS, move: [], drawCards: 0]
00:35:30 DEBUG [TestMain] - TestMain method has started.
00:35:30 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:35:30 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:35:30 DEBUG [RandomPlayerTest] - 
getMoveSEVES_PLAYED test:
00:35:30 DEBUG [RandomPlayerTest] - MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: ACORNS], drawCards: 0
00:35:30 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
00:35:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
00:35:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypeDRAW, move: [], drawCards: 6, MoveTypePASS, move: [], drawCards: 0]
00:35:30 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
00:35:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
00:35:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
00:35:30 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
08:31:37 DEBUG [TestMain] - TestMain method has started.
08:31:37 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:31:37 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:31:37 DEBUG [RandomPlayerTest] - getMoveSEVES_PLAYED test:


08:31:37 DEBUG [RandomPlayerTest] - MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: ACORNS], drawCards: 0
08:31:37 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
08:31:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
08:31:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypeDRAW, move: [], drawCards: 6, MoveTypePASS, move: [], drawCards: 0]
08:31:37 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:31:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
08:31:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
08:31:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
08:31:54 DEBUG [TestMain] - TestMain method has started.
08:31:54 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:31:54 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:31:54 DEBUG [RandomPlayerTest] - getMoveSEVES_PLAYED test:


08:31:54 DEBUG [RandomPlayerTest] - MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: ACORNS], drawCards: 0
08:31:54 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
08:31:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
08:31:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypeDRAW, move: [], drawCards: 6, MoveTypePASS, move: [], drawCards: 0]
08:31:54 DEBUG [RandomPlayerTest] - getMoveSEVES_PLAYED test end


08:31:54 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:31:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
08:31:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
08:31:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1, MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0, MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0, MoveTypeDRAW, move: [], drawCards: 1]
08:39:21 DEBUG [TestMain] - TestMain method has started.
08:39:21 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:39:21 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:39:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
08:39:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
08:39:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
08:39:21 INFO  [com.goldasil.pjv.MoveStateHandler] - [MoveStateDTO{state=SEVEN_HEARTS_RETURN_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW, null]}, MoveStateDTO{state=ACES_ONLY, neighbours=[PASS, ACES_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, ACE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_ACORNS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_BELLS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_HEARTS, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=OVERKNAVE_LEAVES, neighbours=[OVERKNAVE, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, DRAW]}, MoveStateDTO{state=UNDERKNAVE_LEAVES_PLAYED, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=NONSPECIAL_SITUATION, neighbours=[NONSPECIAL_SITUATION, ACES_PLAYED, SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, SEVEN_HEARTS_RETURN_PLAYED, OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED, DRAW]}, MoveStateDTO{state=LOOKING_FOR_SEVEN_HEARTS_RETURN, neighbours=[SEVEN_HEARTS_RETURN_PLAYED]}, MoveStateDTO{state=SEVENS_PLAYED, neighbours=[SEVENS_PLAYED, UNDERKNAVE_LEAVES_PLAYED, null, HEARTS_PLAYED, LEAVES_PLAYED, BELLS_PLAYED, ACORNS_PLAYED]}, MoveStateDTO{state=HEARTS_PLAYED, neighbours=[HEARTS_PLAYED]}, MoveStateDTO{state=LEAVES_PLAYED, neighbours=[LEAVES_PLAYED]}, MoveStateDTO{state=BELLS_PLAYED, neighbours=[BELLS_PLAYED]}, MoveStateDTO{state=ACORNS_PLAYED, neighbours=[ACORNS_PLAYED]}, MoveStateDTO{state=SEVEN_PLAYED, neighbours=[SEVEN_PLAYED]}, MoveStateDTO{state=EIGHT_PLAYED, neighbours=[EIGHT_PLAYED]}, MoveStateDTO{state=NINE_PLAYED, neighbours=[NINE_PLAYED]}, MoveStateDTO{state=TEN_PLAYED, neighbours=[TEN_PLAYED]}, MoveStateDTO{state=UNDERKNAVE_PLAYED, neighbours=[UNDERKNAVE_PLAYED]}, MoveStateDTO{state=OVERKNAVE_PLAYED, neighbours=[OVERKNAVE_PLAYED]}, MoveStateDTO{state=KING_PLAYED, neighbours=[KING_PLAYED]}, MoveStateDTO{state=ACE_PLAYED, neighbours=[ACE_PLAYED]}]
08:39:21 DEBUG [RandomPlayerTest] - getMoveSEVES_PLAYED test:


08:39:21 DEBUG [RandomPlayerTest] - Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: ACORNS], drawCards: 0]
08:39:21 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
08:39:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
08:39:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - pos moves generated
08:39:21 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
08:39:21 DEBUG [RandomPlayerTest] - getMoveSEVES_PLAYED test end


08:41:37 DEBUG [TestMain] - TestMain method has started.
08:41:37 DEBUG [RandomPlayerTest] - Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: ACORNS], drawCards: 0]
08:41:37 DEBUG [RandomPlayerTest] - MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
08:41:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
08:41:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
08:41:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
08:41:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
08:53:05 DEBUG [TestMain] - TestMain method has started.
08:53:05 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
08:53:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
08:53:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
08:53:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
08:53:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
08:53:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
08:53:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
08:54:05 DEBUG [TestMain] - TestMain method has started.
08:54:05 DEBUG [RandomPlayerTest] - 

08:54:05 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
08:54:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
08:54:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
08:54:05 DEBUG [RandomPlayerTest] - 

08:54:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
08:54:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
08:54:05 DEBUG [RandomPlayerTest] - 

08:54:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
08:54:05 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
08:54:05 DEBUG [RandomPlayerTest] - 

09:00:37 DEBUG [TestMain] - TestMain method has started.
09:00:37 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
09:00:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
09:00:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
09:00:37 DEBUG [RandomPlayerTest] - 

09:00:37 DEBUG [RandomPlayerTest] - 

09:00:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
09:00:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
09:00:37 DEBUG [RandomPlayerTest] - 

09:00:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
09:00:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
09:00:37 DEBUG [RandomPlayerTest] - 

09:59:51 DEBUG [TestMain] - TestMain method has started.
09:59:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
09:59:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
09:59:51 DEBUG [RandomPlayerTest] - 

09:59:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
09:59:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
09:59:51 DEBUG [RandomPlayerTest] - 

09:59:51 DEBUG [RandomPlayerTest] - 

09:59:51 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
09:59:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
09:59:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
09:59:51 DEBUG [RandomPlayerTest] - 

10:01:00 DEBUG [TestMain] - TestMain method has started.
10:01:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
10:01:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
10:01:00 DEBUG [RandomPlayerTest] - 

10:01:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:01:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
10:01:00 DEBUG [RandomPlayerTest] - 

10:01:00 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:01:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:01:00 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
10:01:00 DEBUG [RandomPlayerTest] - 

10:01:00 DEBUG [RandomPlayerTest] - 

10:04:35 DEBUG [TestMain] - TestMain method has started.
10:04:35 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:04:35 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:04:35 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
10:04:35 DEBUG [RandomPlayerTest] - 

10:04:35 DEBUG [RandomPlayerTest] - 

10:04:35 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
10:04:35 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
10:04:35 DEBUG [RandomPlayerTest] - 

10:04:35 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:04:35 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
10:04:35 DEBUG [RandomPlayerTest] - 

10:04:35 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:04:35 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:04:35 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [], drawCards: 0]]
10:04:35 DEBUG [RandomPlayerTest] - 

10:14:51 DEBUG [TestMain] - TestMain method has started.
10:14:51 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:14:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:14:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
10:14:51 DEBUG [RandomPlayerTest] - 

10:14:51 DEBUG [RandomPlayerTest] - 

10:14:51 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:14:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:14:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - seves in hand
10:14:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [], drawCards: 0]]
10:14:51 DEBUG [RandomPlayerTest] - 

10:14:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
10:14:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
10:14:51 DEBUG [RandomPlayerTest] - 

10:14:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:14:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
10:14:51 DEBUG [RandomPlayerTest] - 

10:27:15 DEBUG [TestMain] - TestMain method has started.
10:27:15 DEBUG [RandomPlayerTest] - 

10:27:15 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:27:15 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:27:15 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
10:27:15 DEBUG [RandomPlayerTest] - 

10:27:15 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:27:15 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
10:27:15 DEBUG [RandomPlayerTest] - 

10:27:15 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
10:27:15 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
10:27:15 DEBUG [RandomPlayerTest] - 

10:27:15 DEBUG [RandomPlayerTest] - [Card obj: rank: UNDERKNAVE, suit: LEAVES, Card obj: rank: NINE, suit: ACORNS, Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS]
10:27:15 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:27:15 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:27:15 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [], drawCards: 0]]
10:27:15 DEBUG [RandomPlayerTest] - 

10:35:10 DEBUG [TestMain] - TestMain method has started.
10:35:10 DEBUG [RandomPlayerTest] - 

10:35:10 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:35:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:35:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
10:35:10 DEBUG [RandomPlayerTest] - 

10:35:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
10:35:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
10:35:10 DEBUG [RandomPlayerTest] - 

10:35:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:35:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
10:35:10 DEBUG [RandomPlayerTest] - 

10:35:10 DEBUG [RandomPlayerTest] - Cards in hand[Card obj: rank: UNDERKNAVE, suit: LEAVES, Card obj: rank: NINE, suit: ACORNS, Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS]
10:35:10 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:35:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:35:10 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [], drawCards: 0]]
10:35:10 DEBUG [RandomPlayerTest] - 

10:43:13 DEBUG [TestMain] - TestMain method has started.
10:43:13 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
10:43:13 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
10:43:13 DEBUG [RandomPlayerTest] - 

10:43:13 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:43:13 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
10:43:13 DEBUG [RandomPlayerTest] - 

10:43:13 DEBUG [RandomPlayerTest] - Cards in hand[Card obj: rank: UNDERKNAVE, suit: LEAVES, Card obj: rank: NINE, suit: ACORNS, Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS]
10:43:13 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=3, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:43:13 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:43:13 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [], drawCards: 0]]
10:43:13 DEBUG [RandomPlayerTest] - 

10:43:13 DEBUG [RandomPlayerTest] - 

10:43:13 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:43:13 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:43:13 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
10:43:13 DEBUG [RandomPlayerTest] - 

10:49:28 DEBUG [TestMain] - TestMain method has started.
10:49:29 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:49:29 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:49:29 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
10:49:29 DEBUG [RandomPlayerTest] - 

10:49:29 DEBUG [RandomPlayerTest] - 

10:49:29 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
10:49:29 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
10:49:29 DEBUG [RandomPlayerTest] - 

10:49:29 DEBUG [RandomPlayerTest] - Cards in hand[Card obj: rank: UNDERKNAVE, suit: LEAVES, Card obj: rank: NINE, suit: ACORNS, Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS]
10:49:29 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=3, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:49:29 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:49:29 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [], drawCards: 0]]
10:49:29 DEBUG [RandomPlayerTest] - 

10:49:29 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:49:29 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
10:49:29 DEBUG [RandomPlayerTest] - 

10:50:06 DEBUG [TestMain] - TestMain method has started.
10:50:06 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:50:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:50:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
10:50:06 DEBUG [RandomPlayerTest] - 

10:50:06 DEBUG [RandomPlayerTest] - 

10:50:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
10:50:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
10:50:06 DEBUG [RandomPlayerTest] - 

10:50:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:50:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
10:50:06 DEBUG [RandomPlayerTest] - 

10:50:06 DEBUG [RandomPlayerTest] - Cards in hand[Card obj: rank: UNDERKNAVE, suit: LEAVES, Card obj: rank: NINE, suit: ACORNS, Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS]
10:50:06 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=3, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:50:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:50:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES, Card obj: rank: NINE, suit: ACORNS, Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
10:50:06 DEBUG [RandomPlayerTest] - 

10:50:12 DEBUG [TestMain] - TestMain method has started.
10:50:12 DEBUG [RandomPlayerTest] - 

10:50:12 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:50:12 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:50:12 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
10:50:12 DEBUG [RandomPlayerTest] - 

10:50:12 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:50:12 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
10:50:12 DEBUG [RandomPlayerTest] - 

10:50:12 DEBUG [RandomPlayerTest] - Cards in hand[Card obj: rank: UNDERKNAVE, suit: LEAVES, Card obj: rank: NINE, suit: ACORNS, Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS]
10:50:12 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=3, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:50:12 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:50:12 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
10:50:12 DEBUG [RandomPlayerTest] - 

10:50:12 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
10:50:12 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
10:50:12 DEBUG [RandomPlayerTest] - 

10:52:26 DEBUG [TestMain] - TestMain method has started.
10:52:26 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:52:26 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:52:26 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
10:52:26 DEBUG [RandomPlayerTest] - 

10:52:26 DEBUG [RandomPlayerTest] - 

10:52:26 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
10:52:26 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
10:52:26 DEBUG [RandomPlayerTest] - 

10:52:26 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:52:26 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
10:52:26 DEBUG [RandomPlayerTest] - 

10:52:26 DEBUG [RandomPlayerTest] - Cards in hand[Card obj: rank: UNDERKNAVE, suit: LEAVES, Card obj: rank: NINE, suit: ACORNS, Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS]
10:52:26 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=3, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
10:52:26 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
10:52:26 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
10:52:26 DEBUG [RandomPlayerTest] - 

11:16:37 DEBUG [TestMain] - TestMain method has started.
11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePASS, move: [], drawCards: 0]]
11:16:37 DEBUG [RandomPlayerTest] - 

11:16:37 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
11:16:37 DEBUG [RandomPlayerTest] - 

11:16:37 DEBUG [RandomPlayerTest] - 

11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: ACE, suit: LEAVES], drawCards: 0]]
11:16:37 DEBUG [RandomPlayerTest] - 

11:16:37 DEBUG [RandomPlayerTest] - Cards in hand[Card obj: rank: UNDERKNAVE, suit: LEAVES, Card obj: rank: NINE, suit: ACORNS, Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS]
11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:16:37 DEBUG [RandomPlayerTest] - 

11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
11:16:37 DEBUG [RandomPlayerTest] - 

11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:16:37 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
11:16:37 DEBUG [RandomPlayerTest] - 

11:20:51 DEBUG [TestMain] - TestMain method has started.
11:20:51 DEBUG [RandomPlayerTest] - 

11:20:51 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
11:20:51 DEBUG [RandomPlayerTest] - 

11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
11:20:51 DEBUG [RandomPlayerTest] - 

11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: ACE, suit: LEAVES], drawCards: 0]]
11:20:51 DEBUG [RandomPlayerTest] - 

11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
11:20:51 DEBUG [RandomPlayerTest] - 

11:20:51 DEBUG [RandomPlayerTest] - 

11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePASS, move: [], drawCards: 0]]
11:20:51 DEBUG [RandomPlayerTest] - 

11:20:51 DEBUG [RandomPlayerTest] - 

11:20:51 DEBUG [RandomPlayerTest] - Cards in hand[Card obj: rank: UNDERKNAVE, suit: LEAVES, Card obj: rank: NINE, suit: ACORNS, Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES, Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS]
11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:20:51 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:20:51 DEBUG [RandomPlayerTest] - 

11:23:27 DEBUG [TestMain] - TestMain method has started.
11:23:27 DEBUG [RandomPlayerTest] - 

11:23:27 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=null, penaltyForSevens=0, states=[], moveType=PLAY, move=[Card obj: rank: OVERKNAVE, suit: ACORNS], drawCards=0, requestedSuit=LEAVES}
11:23:27 DEBUG [RandomPlayerTest] - 

11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePASS, move: [], drawCards: 0]]
11:23:27 DEBUG [RandomPlayerTest] - 

11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:23:27 DEBUG [RandomPlayerTest] - 

11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: ACE, suit: LEAVES], drawCards: 0]]
11:23:27 DEBUG [RandomPlayerTest] - 

11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
11:23:27 DEBUG [RandomPlayerTest] - 

11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
11:23:27 DEBUG [RandomPlayerTest] - 

11:23:27 DEBUG [RandomPlayerTest] - 

11:23:27 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:23:27 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
11:23:27 DEBUG [RandomPlayerTest] - 

11:25:04 DEBUG [TestMain] - TestMain method has started.
11:25:04 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
11:25:04 DEBUG [RandomPlayerTest] - 

11:25:04 DEBUG [RandomPlayerTest] - 

11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:25:04 DEBUG [RandomPlayerTest] - 

11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
11:25:04 DEBUG [RandomPlayerTest] - 

11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePASS, move: [], drawCards: 0]]
11:25:04 DEBUG [RandomPlayerTest] - 

11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
11:25:04 DEBUG [RandomPlayerTest] - 

11:25:04 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: OVERKNAVE, suit: ACORNS, penaltyForSevens=0, states=[], moveType=PLAY, move=[Card obj: rank: OVERKNAVE, suit: ACORNS], drawCards=0, requestedSuit=LEAVES}
11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0]]
11:25:04 DEBUG [RandomPlayerTest] - 

11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: ACE, suit: LEAVES], drawCards: 0]]
11:25:04 DEBUG [RandomPlayerTest] - 

11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:25:04 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:25:04 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [TestMain] - TestMain method has started.
11:29:54 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
11:29:54 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
11:29:54 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
11:29:54 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:29:54 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0]]
11:29:54 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:29:54 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePASS, move: [], drawCards: 0]]
11:29:54 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1], Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS], drawCards: 0]]
11:29:54 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: ACE, suit: LEAVES], drawCards: 0]]
11:29:54 DEBUG [RandomPlayerTest] - 

11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
11:29:54 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:29:54 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [TestMain] - TestMain method has started.
11:39:55 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
11:39:55 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1], Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS], drawCards: 0]]
11:39:55 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: ACE, suit: LEAVES], drawCards: 0]]
11:39:55 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
11:39:55 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:39:55 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0]]
11:39:55 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:39:55 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
11:39:55 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:39:55 DEBUG [RandomPlayerTest] - 

11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:39:55 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePASS, move: [], drawCards: 0]]
11:39:55 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [TestMain] - TestMain method has started.
11:46:25 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
11:46:25 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:46:25 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePASS, move: [], drawCards: 0]]
11:46:25 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0]]
11:46:25 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:46:25 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
11:46:25 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1], Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:46:25 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
11:46:25 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: ACE, suit: LEAVES], drawCards: 0]]
11:46:25 DEBUG [RandomPlayerTest] - 

11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:46:25 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:46:25 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [TestMain] - TestMain method has started.
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
11:47:24 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:47:24 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:47:24 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
11:47:24 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePASS, move: [], drawCards: 0]]
11:47:24 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1], Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:47:24 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: ACE, suit: LEAVES], drawCards: 0]]
11:47:24 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0]]
11:47:24 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:47:24 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [RandomPlayerTest] - 

11:47:24 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:47:24 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
11:47:24 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [TestMain] - TestMain method has started.
11:53:06 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
11:53:06 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:53:06 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
11:53:06 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePASS, move: [], drawCards: 0]]
11:53:06 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
11:53:06 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:53:06 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0]]
11:53:06 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
11:53:06 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
11:53:06 DEBUG [RandomPlayerTest] - 

11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
11:53:06 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: ACE, suit: LEAVES], drawCards: 0]]
11:53:06 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [TestMain] - TestMain method has started.
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [NONSPECIAL_SITUATION, ACORNS_PLAYED, TEN_PLAYED]
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: ACORNS, Card obj: rank: KING, suit: LEAVES], drawCards: 0]]
12:13:39 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePASS, move: [], drawCards: 0]]
12:13:39 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [ACES_ONLY, ACORNS_PLAYED, ACE_PLAYED]
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: ACE, suit: LEAVES], drawCards: 0]]
12:13:39 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
12:13:39 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
12:13:39 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 6]]
12:13:39 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: SEVEN, suit: HEARTS, Card obj: rank: SEVEN, suit: BELLS], drawCards: 0]]
12:13:39 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES, LOOKING_FOR_SEVEN_HEARTS_RETURN]
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypeDRAW, move: [], drawCards: 1]]
12:13:39 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [LEAVES_PLAYED, OVERKNAVE_PLAYED, OVERKNAVE_LEAVES]
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: KING, suit: LEAVES, Card obj: rank: KING, suit: ACORNS], drawCards: 0]]
12:13:39 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [RandomPlayerTest] - Prev moveDTO: MoveDTO{upcard=Card obj: rank: SEVEN, suit: ACORNS, penaltyForSevens=6, states=[], moveType=PLAY, move=[Card obj: rank: SEVEN, suit: ACORNS], drawCards=0, requestedSuit=UNSPECIFIED}
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - prevstates based on the arg MoveDTO prevMove: [SEVENS_PLAYED, ACORNS_PLAYED, SEVEN_PLAYED]
12:13:39 DEBUG [com.goldasil.pjv.models.RandomPlayer] - list of pos moves: [Move{MoveTypePLAY, move: [Card obj: rank: UNDERKNAVE, suit: LEAVES], drawCards: 0]]
12:13:39 DEBUG [RandomPlayerTest] - 

12:13:39 DEBUG [RandomPlayerTest] - 

12:14:24 DEBUG [TestMain] - TestMain method has started.
12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [LOOKING_FOR_SEVEN_HEARTS_RETURN, ACORNS_PLAYED, NINE_PLAYED] to [BELLS_PLAYED, EIGHT_PLAYED].
12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Not the same rank or suit from [LOOKING_FOR_SEVEN_HEARTS_RETURN, ACORNS_PLAYED, NINE_PLAYED] to [BELLS_PLAYED, EIGHT_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Special high priority transition from [LOOKING_FOR_SEVEN_HEARTS_RETURN, OVERKNAVE_LEAVES, LEAVES_PLAYED] to [SEVEN_HEARTS_RETURN_PLAYED, HEARTS_PLAYED, SEVEN_PLAYED] -> valid transition.

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [NONSPECIAL_SITUATION, NINE_PLAYED, BELLS_PLAYED] to [NONSPECIAL_SITUATION, NINE_PLAYED, LEAVES_PLAYED].
12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Same rank or suit from [NONSPECIAL_SITUATION, NINE_PLAYED, BELLS_PLAYED] to [NONSPECIAL_SITUATION, NINE_PLAYED, LEAVES_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Valid trasition from [NONSPECIAL_SITUATION, NINE_PLAYED, BELLS_PLAYED] to [NONSPECIAL_SITUATION, NINE_PLAYED, LEAVES_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [NONSPECIAL_SITUATION, NINE_PLAYED, BELLS_PLAYED] to [NONSPECIAL_SITUATION, TEN_PLAYED, LEAVES_PLAYED].
12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Not the same rank or suit from [NONSPECIAL_SITUATION, NINE_PLAYED, BELLS_PLAYED] to [NONSPECIAL_SITUATION, TEN_PLAYED, LEAVES_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [OVERKNAVE_LEAVES, LEAVES_PLAYED, OVERKNAVE_PLAYED] to [ACORNS_PLAYED, NINE_PLAYED].
12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Not the same rank or suit from [OVERKNAVE_LEAVES, LEAVES_PLAYED, OVERKNAVE_PLAYED] to [ACORNS_PLAYED, NINE_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [LOOKING_FOR_SEVEN_HEARTS_RETURN, ACORNS_PLAYED, NINE_PLAYED] to [ACORNS_PLAYED, EIGHT_PLAYED].
12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Same rank or suit from [LOOKING_FOR_SEVEN_HEARTS_RETURN, ACORNS_PLAYED, NINE_PLAYED] to [ACORNS_PLAYED, EIGHT_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Valid trasition from [LOOKING_FOR_SEVEN_HEARTS_RETURN, ACORNS_PLAYED, NINE_PLAYED] to [ACORNS_PLAYED, EIGHT_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from [NONSPECIAL_SITUATION, ACORNS_PLAYED, NINE_PLAYED] to [PASS].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from NONSPECIAL_SITUATION to PASS.

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from [OVERKNAVE_LEAVES, LEAVES_PLAYED] to [SEVENS_PLAYED, ACORNS_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from OVERKNAVE_LEAVES to SEVENS_PLAYED.

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from [OVERKNAVE_BELLS, BELLS_PLAYED] to [SEVENS_PLAYED, HEARTS_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Not a valid trasition from OVERKNAVE_BELLS to SEVENS_PLAYED.

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [OVERKNAVE_ACORNS, OVERKNAVE_PLAYED, ACORNS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].
12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Same rank or suit from [OVERKNAVE_ACORNS, OVERKNAVE_PLAYED, ACORNS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Valid trasition from [OVERKNAVE_ACORNS, OVERKNAVE_PLAYED, ACORNS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Checking if same rank or suit from [NONSPECIAL_SITUATION, KING_PLAYED, BELLS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].
12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Same rank or suit from [NONSPECIAL_SITUATION, KING_PLAYED, BELLS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].

12:14:24 INFO  [com.goldasil.pjv.MoveStateHandler] - Valid trasition from [NONSPECIAL_SITUATION, KING_PLAYED, BELLS_PLAYED] to [OVERKNAVE, HEARTS_PLAYED, LEAVES_PLAYED, ACORNS_PLAYED, BELLS_PLAYED].

